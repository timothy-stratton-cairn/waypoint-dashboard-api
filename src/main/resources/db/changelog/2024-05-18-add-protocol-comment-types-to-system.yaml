databaseChangeLog:
  - preConditions:
      onFail: HALT
      onError: HALT
  - changeSet:
      id: create-protocol-comment-type-table
      author: tstratton
      changes:
        - sql:
            dbms: 'h2, mysql'
            sql: DROP TABLE IF EXISTS `protocol_comment_type`;
        - sql:
            dbms: 'h2, mysql'
            sql: CREATE TABLE `protocol_comment_type` (
              `id` bigint NOT NULL AUTO_INCREMENT,
              `created` datetime DEFAULT CURRENT_TIMESTAMP,
              `updated` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
              `modified_by` varchar(255) DEFAULT NULL,
              `name` varchar(255) DEFAULT NULL,
              `description` text DEFAULT NULL,
              `active` bit(1) DEFAULT NULL,
              PRIMARY KEY (`id`),
              UNIQUE KEY `UK_c71yadhy25h64bjwo0591f2h5` (`name`)
              ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
  - changeSet:
      id: add-column-to-protocol-commentary-table
      author: tstratton
      changes:
        - sql:
            dbms: 'h2, mysql'
            sql: ALTER TABLE protocol_commentary 
              ADD `protocol_comment_type_id` bigint DEFAULT NULL AFTER `comment`,
              ADD CONSTRAINT `FK22tpvuk2d68kxt0qj6jhl02nt` FOREIGN KEY (`protocol_comment_type_id`) REFERENCES `protocol_comment_type` (`id`);
  - changeSet:
      id: add-protocol-comment-types
      author: tstratton
      changes:
        - sql:
            dbms: 'h2, mysql'
            sql: INSERT INTO protocol_comment_type (`modified_by`, `name`, `description`, `active`) VALUES ('liquibase', 'Comment', 'A Simple Comment or Note', 1)
        - sql:
            dbms: 'h2, mysql'
            sql: INSERT INTO protocol_comment_type (`modified_by`, `name`, `description`, `active`) VALUES ('liquibase', 'Recommendation', 'A Recommendation to be provided to the Client', 1)
        - sql:
            dbms: 'h2, mysql'
            sql: INSERT INTO protocol_comment_type (`modified_by`, `name`, `description`, `active`) VALUES ('liquibase', 'Internal Meeting Note', 'Internal Meeting notes on the Client\'s Protocol', 1)
        - sql:
            dbms: 'h2, mysql'
            sql: UPDATE protocol_commentary SET protocol_comment_type_id = (SELECT name FROM protocol_comment_type WHERE name = 'Comment');
